"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-6(ee64786y7g*tj9zg#bqb!870xv4di)f@k!!!vnlyisvfh&p1"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

CSRF_TRUSTED_ORIGINS = ["https://5dcd4976fdc0.ngrok-free.app"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "restourancite",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "myproject.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            BASE_DIR / "restourancite" / "templates"
        ],  # Укажите путь к папке шаблонов
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]


WSGI_APPLICATION = "myproject.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "restourancite" / "templates"],
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "Restouran",
        "USER": "postgres",
        "PASSWORD": "1234",
        "HOST": "localhost",
        "PORT": "5433",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

STATICFILES_DIRS = [
    BASE_DIR / "restourancite" / "static",  # Укажи путь к директории 'static'
]
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
BASE_DIR = Path(__file__).resolve().parent.parent

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

MEDIA_ROOT = BASE_DIR
MEDIA_URL = "/"

TELEGRAM_BOT_TOKEN = '8123046063:AAGdt1GALe7mbCRCOeu-zoEckBS-9Uq7h2w'
TELEGRAM_CHAT_ID = '1035834108'

"""
План курсовой работы: "Разработка веб-приложения для ресторана"

Введение
Обоснование выбора темы.
Цель и задачи исследования.
Актуальность разработки веб-приложения для ресторанного бизнеса.
Глава 1. Анализ предметной области
Анализ текущего состояния рынка и современных тенденций в ресторанной сфере.
Исследование аналогичных веб-приложений и их функциональных возможностей.
Выявление требований к разработке веб-приложения.
Глава 2. Проектирование системы
Определение функциональных требований.
Управление бронированием столиков.
Представление меню и барной карты.
Обратная связь и система оценки.
Обращения клиентов.
Разработка архитектуры веб-приложения:
Выбор архитектурного стиля.
Структура базы данных.
Проектирование пользовательского интерфейса:
Навигация.
Дизайн основных страниц.
Учет удобства пользователя.
Глава 3. Реализация веб-приложения
Выбор инструментов и технологий разработки:
Django как серверная часть.
Bootstrap для разработки пользовательского интерфейса.
PostgreSQL для хранения данных.
Реализация основных модулей:
Модуль бронирования столиков.
Модуль представления меню и напитков.
Модуль обратной связи и оценки.
Модуль работы с обращениями.
Интеграция системы нечеткой логики для оценки ресторана.
Глава 4. Тестирование и оценка качества приложения
Методы и инструменты тестирования.
Тестирование функциональности модулей.
Оценка производительности приложения.
Анализ пользовательского опыта.
Глава 5. Внедрение и рекомендации
Планы внедрения веб-приложения в деятельность ресторана.
Возможные направления дальнейшей разработки:
Интеграция с внешними системами (онлайн-оплата, доставка).
Добавление личного кабинета для пользователей.
Использование ИИ для персонализированных рекомендаций.
Заключение
Подведение итогов работы.
Достижение поставленных целей.
Перспективы использования разработанного веб-приложения.
Приложения
Код веб-приложения.
Модели базы данных.
Скриншоты основных страниц.
Результаты тестирования.
Это план, который охватывает все ключевые аспекты разработки вашего веб-приложения. Если нужно что-то изменить или уточнить, дайте знать!
"""
